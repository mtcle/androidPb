// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Room.proto

#ifndef PROTOBUF_Room_2eproto__INCLUDED
#define PROTOBUF_Room_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "User.pb.h"
// @@protoc_insertion_point(includes)

namespace bean {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_Room_2eproto();
void protobuf_InitDefaults_Room_2eproto();
void protobuf_AssignDesc_Room_2eproto();
void protobuf_ShutdownFile_Room_2eproto();

class Room;

// ===================================================================

class Room : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bean.Room) */ {
 public:
  Room();
  virtual ~Room();

  Room(const Room& from);

  inline Room& operator=(const Room& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room& default_instance();

  static const Room* internal_default_instance();

  void Swap(Room* other);

  // implements Message ----------------------------------------------

  inline Room* New() const { return New(NULL); }

  Room* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room& from);
  void MergeFrom(const Room& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Room* other);
  void UnsafeMergeFrom(const Room& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required string roomName = 2;
  bool has_roomname() const;
  void clear_roomname();
  static const int kRoomNameFieldNumber = 2;
  const ::std::string& roomname() const;
  void set_roomname(const ::std::string& value);
  void set_roomname(const char* value);
  void set_roomname(const char* value, size_t size);
  ::std::string* mutable_roomname();
  ::std::string* release_roomname();
  void set_allocated_roomname(::std::string* roomname);

  // optional string roomDesc = 3;
  bool has_roomdesc() const;
  void clear_roomdesc();
  static const int kRoomDescFieldNumber = 3;
  const ::std::string& roomdesc() const;
  void set_roomdesc(const ::std::string& value);
  void set_roomdesc(const char* value);
  void set_roomdesc(const char* value, size_t size);
  ::std::string* mutable_roomdesc();
  ::std::string* release_roomdesc();
  void set_allocated_roomdesc(::std::string* roomdesc);

  // repeated .bean.User userList = 4;
  int userlist_size() const;
  void clear_userlist();
  static const int kUserListFieldNumber = 4;
  const ::bean::User& userlist(int index) const;
  ::bean::User* mutable_userlist(int index);
  ::bean::User* add_userlist();
  ::google::protobuf::RepeatedPtrField< ::bean::User >*
      mutable_userlist();
  const ::google::protobuf::RepeatedPtrField< ::bean::User >&
      userlist() const;

  // @@protoc_insertion_point(class_scope:bean.Room)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_roomname();
  inline void clear_has_roomname();
  inline void set_has_roomdesc();
  inline void clear_has_roomdesc();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::bean::User > userlist_;
  ::google::protobuf::internal::ArenaStringPtr roomname_;
  ::google::protobuf::internal::ArenaStringPtr roomdesc_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_InitDefaults_Room_2eproto_impl();
  friend void  protobuf_AddDesc_Room_2eproto_impl();
  friend void protobuf_AssignDesc_Room_2eproto();
  friend void protobuf_ShutdownFile_Room_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Room> Room_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Room

// required int32 id = 1;
inline bool Room::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Room::id() const {
  // @@protoc_insertion_point(field_get:bean.Room.id)
  return id_;
}
inline void Room::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:bean.Room.id)
}

// required string roomName = 2;
inline bool Room::has_roomname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room::set_has_roomname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomname();
}
inline const ::std::string& Room::roomname() const {
  // @@protoc_insertion_point(field_get:bean.Room.roomName)
  return roomname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Room::set_roomname(const ::std::string& value) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.Room.roomName)
}
inline void Room::set_roomname(const char* value) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.Room.roomName)
}
inline void Room::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.Room.roomName)
}
inline ::std::string* Room::mutable_roomname() {
  set_has_roomname();
  // @@protoc_insertion_point(field_mutable:bean.Room.roomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Room::release_roomname() {
  // @@protoc_insertion_point(field_release:bean.Room.roomName)
  clear_has_roomname();
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Room::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    set_has_roomname();
  } else {
    clear_has_roomname();
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:bean.Room.roomName)
}

// optional string roomDesc = 3;
inline bool Room::has_roomdesc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Room::set_has_roomdesc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Room::clear_has_roomdesc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Room::clear_roomdesc() {
  roomdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomdesc();
}
inline const ::std::string& Room::roomdesc() const {
  // @@protoc_insertion_point(field_get:bean.Room.roomDesc)
  return roomdesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Room::set_roomdesc(const ::std::string& value) {
  set_has_roomdesc();
  roomdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.Room.roomDesc)
}
inline void Room::set_roomdesc(const char* value) {
  set_has_roomdesc();
  roomdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.Room.roomDesc)
}
inline void Room::set_roomdesc(const char* value, size_t size) {
  set_has_roomdesc();
  roomdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.Room.roomDesc)
}
inline ::std::string* Room::mutable_roomdesc() {
  set_has_roomdesc();
  // @@protoc_insertion_point(field_mutable:bean.Room.roomDesc)
  return roomdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Room::release_roomdesc() {
  // @@protoc_insertion_point(field_release:bean.Room.roomDesc)
  clear_has_roomdesc();
  return roomdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Room::set_allocated_roomdesc(::std::string* roomdesc) {
  if (roomdesc != NULL) {
    set_has_roomdesc();
  } else {
    clear_has_roomdesc();
  }
  roomdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomdesc);
  // @@protoc_insertion_point(field_set_allocated:bean.Room.roomDesc)
}

// repeated .bean.User userList = 4;
inline int Room::userlist_size() const {
  return userlist_.size();
}
inline void Room::clear_userlist() {
  userlist_.Clear();
}
inline const ::bean::User& Room::userlist(int index) const {
  // @@protoc_insertion_point(field_get:bean.Room.userList)
  return userlist_.Get(index);
}
inline ::bean::User* Room::mutable_userlist(int index) {
  // @@protoc_insertion_point(field_mutable:bean.Room.userList)
  return userlist_.Mutable(index);
}
inline ::bean::User* Room::add_userlist() {
  // @@protoc_insertion_point(field_add:bean.Room.userList)
  return userlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bean::User >*
Room::mutable_userlist() {
  // @@protoc_insertion_point(field_mutable_list:bean.Room.userList)
  return &userlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bean::User >&
Room::userlist() const {
  // @@protoc_insertion_point(field_list:bean.Room.userList)
  return userlist_;
}

inline const Room* Room::internal_default_instance() {
  return &Room_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace bean

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Room_2eproto__INCLUDED
